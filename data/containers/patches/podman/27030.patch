From a720139dd8af33d8ac30e7f4225aafb024f69da6 Mon Sep 17 00:00:00 2001
From: Paul Holzinger <pholzing@redhat.com>
Date: Tue, 9 Sep 2025 17:11:24 +0200
Subject: [PATCH 1/4] New VM images 2025-09-10

https://github.com/containers/automation_images/pull/416

Signed-off-by: Paul Holzinger <pholzing@redhat.com>
---
 .cirrus.yml | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/.cirrus.yml b/.cirrus.yml
index 3059c80bd4..50676192b6 100644
--- a/.cirrus.yml
+++ b/.cirrus.yml
@@ -31,7 +31,7 @@ env:
     DEBIAN_NAME: "debian-13"
 
     # Image identifiers
-    IMAGE_SUFFIX: "c20250812t173301z-f42f41d13"
+    IMAGE_SUFFIX: "c20250910t092246z-f42f41d13"
 
     # EC2 images
     FEDORA_AMI: "fedora-aws-${IMAGE_SUFFIX}"

From 52fcdcf64cc9c560eb5c3a25b8f7b59e23c05ba7 Mon Sep 17 00:00:00 2001
From: Paul Holzinger <pholzing@redhat.com>
Date: Wed, 10 Sep 2025 13:29:58 +0200
Subject: [PATCH 2/4] test/system: skip idmapped mount correctly

The full error message is:
failed to create idmapped mount: mount_setattr /tmp/CI_SKPI/podman_bats.RX6gD9/rootfs: invalid argument

So in order to match this account for the variable part.

Signed-off-by: Paul Holzinger <pholzing@redhat.com>
---
 test/system/030-run.bats | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/test/system/030-run.bats b/test/system/030-run.bats
index 35389284ee..f0f3725ee5 100644
--- a/test/system/030-run.bats
+++ b/test/system/030-run.bats
@@ -1465,7 +1465,9 @@ EOF
     # check if the underlying file system supports idmapped mounts
     run_podman '?' run --security-opt label=disable --rm --uidmap=0:1000:10000 --rootfs $romount:idmap true
     if [[ $status -ne 0 ]]; then
-        if [[ "$output" =~ "failed to create idmapped mount: invalid argument" ]]; then
+        # Note bash regex only works if the right hand side is unquoted so we have to use this extra var.
+        match="failed to create idmapped mount.* invalid argument"
+        if [[ "$output" =~ $match ]]; then
             skip "idmapped mounts not supported"
         fi
         # Any other error is fatal

From 3bb32d846bd1e060d5487e90caeb934b9f7e602e Mon Sep 17 00:00:00 2001
From: Paul Holzinger <pholzing@redhat.com>
Date: Wed, 10 Sep 2025 13:36:28 +0200
Subject: [PATCH 3/4] test/system: skip noswap memory mounts correctly

On debian with an older we get this error instead:
fsconfig() failed: tmpfs: Unknown parameter 'noswap'

So handle that case as well to skip the test correctly.

Signed-off-by: Paul Holzinger <pholzing@redhat.com>
---
 test/system/060-mount.bats | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/test/system/060-mount.bats b/test/system/060-mount.bats
index bdde9b459c..464ca5db62 100644
--- a/test/system/060-mount.bats
+++ b/test/system/060-mount.bats
@@ -370,7 +370,7 @@ EOF
         mkdir $testmount
         run mount -t tmpfs -o noswap none $testmount
         if [[ $status -ne 0 ]]; then
-            if [[ $output =~ "bad option" ]]; then
+            if [[ $output =~ "bad option" ]] || [[ "$output" =~ "Unknown parameter" ]]; then
                 skip "requires kernel with tmpfs + noswap support"
             fi
             die "Could not test for tmpfs + noswap support: $output"

From 8537afca6658fc8337366286a83cf34db55f6d8e Mon Sep 17 00:00:00 2001
From: Paul Holzinger <pholzing@redhat.com>
Date: Wed, 10 Sep 2025 13:49:03 +0200
Subject: [PATCH 4/4] test/e2e: fix podman run default mask test with crun 1.24

The ls call for the directory now fails with EACCES, see
https://github.com/containers/crun/issues/1876

Signed-off-by: Paul Holzinger <pholzing@redhat.com>
---
 test/e2e/run_test.go | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/test/e2e/run_test.go b/test/e2e/run_test.go
index dd3abab50c..42f281f4b4 100644
--- a/test/e2e/run_test.go
+++ b/test/e2e/run_test.go
@@ -406,7 +406,9 @@ var _ = Describe("Podman run", func() {
 				if st.IsDir() {
 					session = podmanTest.Podman([]string{"exec", "maskCtr", "ls", mask})
 					session.WaitWithDefaultTimeout()
-					Expect(session).Should(ExitCleanly())
+					// FIXME: crun 1.24 fails with EACCES https://github.com/containers/crun/issues/1876
+					// Thus ignore the exit status check here, we still check that the dir is empty with the output.
+					// Expect(session).Should(ExitCleanly())
 					Expect(session.OutputToString()).To(BeEmpty())
 				} else {
 					session = podmanTest.Podman([]string{"exec", "maskCtr", "cat", mask})
